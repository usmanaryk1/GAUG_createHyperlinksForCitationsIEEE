/**
 * Copyright (c) 2009 Sergiy Kovalchuk (serg472@gmail.com)
 * 
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *  
 * Following code is based on Element.mask() implementation from ExtJS framework (http://extjs.com/)
 *
 */
(function(a) {
    a.fn.loadmask = function(c, b) {
        a(this).each(function() {
            if (b !== undefined && b > 0) {
                var d = a(this);
                d.data("_mask_timeout", setTimeout(function() {
                    a.maskElement(d, c)
                }, b))
            } else {
                a.maskElement(a(this), c)
            }
        })
    };
    a.fn.unmask = function() {
        a(this).each(function() {
            a.unmaskElement(a(this))
        })
    };
    a.fn.isMasked = function() {
        return this.hasClass("masked")
    };
    a.maskElement = function(d, c) {
        if (d.data("_mask_timeout") !== undefined) {
            clearTimeout(d.data("_mask_timeout"));
            d.removeData("_mask_timeout")
        }
        if (d.isMasked()) {
            a.unmaskElement(d)
        }
        if (d.css("position") == "static") {
            d.addClass("masked-relative")
        }
        d.addClass("masked");
        var e = a('<div class="loadmask page-loading-overlay"></div>');
        if (navigator.userAgent.toLowerCase().indexOf("msie") > -1) {
            e.height(d.height() + parseInt(d.css("padding-top")) + parseInt(d.css("padding-bottom")));
            e.width(d.width() + parseInt(d.css("padding-left")) + parseInt(d.css("padding-right")))
        }
        if (navigator.userAgent.toLowerCase().indexOf("msie 6") > -1) {
            d.find("select").addClass("masked-hidden")
        }
        d.append(e);
        if (c !== undefined) {
            var b = a('<div class="loadmask-msg" style="display:none;"></div>');
            b.append("<div>" + '<div class="loadr">' +
                        '<svg viewbox="0 0 74.6 81">' +
                        '<path d="M67.8,12.9C51.7,5.2,26.2,0.2,26.2,0.2c-10.9-1.8-9.3,11.4-9,20.2c0,0.7,0.1,1.4,0.1,2c7.8,1.5,19.7,4,29.2,7.4c11.4,4.1,9.6,8.3,9.2,16c-0.2,4.9-0.4,14,1.1,21.3c7.7,1.4,13.8,1.9,13.1-0.3c-6.3-7.2-0.1-29.6,1.8-34.2C73.3,28.7,79.3,18.4,67.8,12.9z">      </path>' +
                        '<path d="M58.9,79.5c-6.5-5.6-6.2-23.6-5.8-31.3c0.4-7.7,2.1-11.9-9.2-16c-15.3-5.5-37.3-8.8-37.3-8.8c-9.1-1.1-6.6,8.4-5.5,15.1c1.7,10,5.4,22,7.9,27.8c2.8,6.5,8.9,7.3,8.9,7.3S65.4,85.1,58.9,79.5z"></path>' +
                        '</svg>' +
                        '</div>'+ "</div>");
            d.append(b);
            b.css("top", Math.round(d.height() / 2 - (b.height() - parseInt(b.css("padding-top")) - parseInt(b.css("padding-bottom"))) / 2) + "px");
            b.css("left", Math.round(d.width() / 2 - (b.width() - parseInt(b.css("padding-left")) - parseInt(b.css("padding-right"))) / 2) + "px");
            b.show()
        }
    };
    a.unmaskElement = function(b) {
        if (b.data("_mask_timeout") !== undefined) {
            clearTimeout(b.data("_mask_timeout"));
            b.removeData("_mask_timeout")
        }
        b.find(".loadmask-msg,.loadmask").remove();
        b.removeClass("masked");
        b.removeClass("masked-relative");
        b.find("select").removeClass("masked-hidden")
    }
})(jQuery);
